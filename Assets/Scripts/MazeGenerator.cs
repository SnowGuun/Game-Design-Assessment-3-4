using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MazeGenerator : MonoBehaviour
{   
    [SerializeField] private int scaleSize = 10;
    [SerializeField] private GameObject wallPrefab;

    void Start()
    {
        int[,] maze = {                                       //LEVEL 1 MAZE
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}, 
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}, 
        {1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}, 
        {1,1,0,1,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1}, 
        {1,1,0,0,0,1,1,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1}, 
        {1,1,0,1,1,0,0,0,0,1,1,1,1,0,0,0,1,0,1,1,0,0,0,0,0,1,0,1,1,1}, 
        {1,1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,0,1,1,0,0,0,0,0,1,0,1,1,1}, 
        {1,1,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1}, 
        {1,1,0,0,1,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,1}, 
        {1,1,0,1,1,1,1,0,1,0,0,0,1,0,1,0,1,1,0,0,0,0,1,0,0,0,0,1,0,1}, 
        {1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,1,0,1,0,1,1,0,1}, 
        {1,1,1,1,0,1,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,1,1,0,1,0,0,0,0,1}, 
        {1,1,1,0,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,1,0,1,1,0,1,1,1,0,1,1}, 
        {1,1,1,0,0,0,0,0,1,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,1,1}, 
        {1,1,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1}, 
        {1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1,0,0,0,1,1}, 
        {1,1,1,1,0,1,0,0,0,1,1,0,1,0,0,0,1,1,1,1,0,1,0,0,0,1,1,0,1,1}, 
        {1,1,1,1,0,1,0,1,0,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1}, 
        {1,1,1,1,0,0,0,1,1,0,1,0,0,0,0,1,1,1,0,1,0,1,0,0,0,1,0,1,1,1}, 
        {1,1,1,0,0,1,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,1,1}, 
        {1,1,1,0,1,1,1,0,1,0,1,0,0,0,0,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1}, 
        {1,1,1,0,1,1,1,0,1,0,0,0,1,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,1,1}, 
        {1,1,1,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,1}, 
        {1,1,1,1,0,0,0,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,1,0,0,1,0,1,1}, 
        {1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1}, 
        {1,1,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,1,1,1,0,1,0,1,1,0,1,1}, 
        {1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,0,1,0,0,0,0,0,1,0,0,0,1}, 
        {1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,1,0,0,0,0,0,1}, 
        {1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1}, 
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
    };

        GameObject floor = GameObject.CreatePrimitive(PrimitiveType.Cube);
        floor.transform.position = new Vector3(((maze.GetLength(0)*scaleSize)/2)-(scaleSize/2), 0, ((maze.GetLength(1)*scaleSize)/2)-(scaleSize/2));
        floor.transform.localScale = new Vector3(maze.GetLength(0)*scaleSize, 1, maze.GetLength(1)*scaleSize);
        floor.name = "floor";
        floor.transform.parent = this.transform;
        for(int x = 0; x < maze.GetLength(0); x++){
            for(int y = 0; y < maze.GetLength(1); y++){
                if(maze[x, y] == 1){
                    GameObject cube = Instantiate(wallPrefab, new Vector3(0, 0, 0), Quaternion.identity);
                    cube.transform.position = new Vector3(x*scaleSize, scaleSize, y*scaleSize);
                    cube.transform.localScale = new Vector3(scaleSize, scaleSize*2, scaleSize);
                    cube.transform.parent = this.transform;
                    cube.name = "cube " + x + ":" + y;
                }
            }
        }
    }
}
